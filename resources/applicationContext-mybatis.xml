<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="   
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
                http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="cn.appsys.service" />
	<context:component-scan base-package="cn.appsys.dao" />
	<!-- <context:annotation-config /> -->
	<context:property-placeholder location="classpath:database.properties" />
	<!-- JNDI获取数据源(使用dbcp连接池) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" scope="singleton">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxIdle" value="${maxIdle}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select 1" />
		<property name="numTestsPerEvictionRun" value="${maxActive}" />
	</bean>

	<!-- 事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置增强 -->

	<tx:advice id="myAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 方法名以appsys开头的方法采用我们所指定的事务规则 使配置事务的方法始终处于事务之中，如果没有则自动生成事务 当方法碰到exception时进行回滚 -->
			<tx:method name="appsys*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 为spring中配置了切面的bean创建代理 -->
	<aop:aspectj-autoproxy />
	<!-- 配置切面 true动态代理采用的是cglib false为jdk的动态代理 -->
	<aop:config proxy-target-class="true">
		<!-- 配置切入点 -->
		<aop:pointcut expression="execution(* *cn.appsys.service..*(..))"
			id="transService" />
		<!-- 指定增强处理类 指定切点 -->
		<aop:advisor advice-ref="myAdvice" pointcut-ref="transService" />
	</aop:config>
	<!-- 配置mybatis SqlSessionFactoryBean -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.appsys.dao" />
	</bean>
</beans>